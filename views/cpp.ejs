<%- include("Header")-%>
<div class="vishal" style="background-color: aquamarine;">





    <h1 class="h1">C++ Tutorial</h1>
    <a href="https://training.javatpoint.com/c-cpp-training.jsp" target="_blank"></a>
    
    <p>C++ tutorial provides basic and advanced concepts of C++. Our C++ tutorial is designed for beginners and professionals.</p>
    <p>C++ is an object-oriented programming language. It is an extension to <a href="c-programming-language-tutorial">C programming</a>.</p>
    <p>Our C++ tutorial includes all topics of C++ such as first example, control statements, objects and classes, <a href="cpp-inheritance">inheritance</a>, <a href="cpp-constructor">constructor</a>, destructor, this, static, polymorphism, abstraction, abstract class, interface, namespace, encapsulation, arrays, strings, exception handling, File IO, etc.</p>
    <h2 class="h2"> What is C++</h2>
    <p>C++ is a general purpose, case-sensitive, free-form programming language that supports object-oriented, procedural and generic programming.</p>
    <p>C++ is a middle-level language, as it encapsulates both high and low level language features.</p>
    <hr />
    <h2 class="h2">Object-Oriented Programming (OOPs)</h2>
    <p>C++ supports the object-oriented programming, the four major pillar of object-oriented programming (<a href="cpp-oops-concepts">OOPs</a>) used in C++ are:</p>
    <ol class="points">
    <li>Inheritance</li>
    <li>Polymorphism</li>
    <li>Encapsulation</li>
    <li>Abstraction</li>
    </ol>
    <hr />
    <h2 class="h2">C++ Standard Libraries</h2>
    <p>Standard C++ programming is divided into three important parts:</p>
    <ul class="points">
    <li>The core library includes the data types, variables and literals, etc.</li>
    <li>The standard library includes the set of functions manipulating strings, files, etc.</li>
    <li>The Standard Template Library (STL) includes the set of methods manipulating a data structure.</li>
    </ul>
    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    
    <ins class="adsbygoogle cm_jtp_wtc_responsive" style="display:inline-block" data-ad-client="ca-pub-4699858549023382" data-ad-slot="6746133113"></ins>
    <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
    </script>
    <hr />
    <h2 class="h2">Usage of C++</h2>
    <p>By the help of C++ programming language, we can develop different types of secured and robust applications:</p>
    <ul class="points">
    <li>Window application</li>
    <li>Client-Server application</li>
    <li>Device drivers</li>
    <li>Embedded firmware etc</li>
    </ul>
    <h2 class="h2">C++ Program</h2>
    <p>In this tutorial, all C++ programs are given with C++ compiler so that you can easily change the C++ program code.</p>
    <p>File: main.cpp</p>
    <div class="codeblock"><textarea name="code" class="Cpp">
    #include <iostream>
    using namespace std;
    int main() {
       cout << "Hello C++ Programming";
       return 0;
    }
    </textarea></div>
    <p>A detailed explanation of first C++ program is given in next chapters.</p>
    
    <hr />
    <h2 class="h2 center textshadow">C++ Index</h2>
    <hr />
    <div class="responsivediv">
    <div class="col-3">
    <p><strong>C++ Tutorial</strong></p>
    <ul class="points">
    <li><a href="cpp-tutorial">C++ Tutorial</a></li>
    <li><a href="what-is-cpp">What is C++</a></li>
    <li><a href="c-vs-cpp">C vs C++</a></li>
    <li><a href="cpp-history">C++ History</a></li>
    <li><a href="cpp-features">C++ Features</a></li>
    <li><a href="cpp-installation">C++ Installation </a></li>
    <li><a href="cpp-program">C++ Program</a></li>
    <li><a href="cpp-basic-input-output">C++ cout, cin, endl</a></li>
    <li><a href="cpp-variable">C++ Variable</a></li>
    <li><a href="cpp-data-types">C++ Data types</a></li>
    <li><a href="cpp-keywords">C++ Keywords</a></li>
    <li><a href="cpp-operators">C++ Operators</a></li>
    </ul>
    <p><strong>C++ Control Statement</strong></p>
    <ul class="points">
    <li><a href="cpp-if-else">C++ if-else</a></li>
    <li><a href="cpp-switch">C++ switch</a></li>
    <li><a href="cpp-for-loop">C++ For Loop</a></li>
    <li><a href="cpp-while-loop">C++ While Loop</a></li>
    <li><a href="cpp-do-while-loop">C++ Do-While Loop</a></li>
    <li><a href="cpp-break-statement">C++ Break Statement</a></li>
    <li><a href="cpp-continue-statement">C++ Continue Statement</a></li>
    <li><a href="cpp-goto-statement">C++ Goto Statement</a></li>
    <li><a href="cpp-comments">C++ Comments</a></li>
    </ul>
    <p><strong>C++ Functions</strong></p>
    <ul class="points">
    <li><a href="cpp-functions">C++ Functions</a></li>
    <li><a href="call-by-value-and-call-by-reference-in-cpp">Call by value &amp; reference</a></li>
    <li><a href="cpp-recursion">C++ Recursion</a></li>
    <li><a href="cpp-storage-classes">C++ Storage Classes</a></li>
    </ul>
    <p><strong>C++ Arrays</strong></p>
    <ul class="points">
    <li><a href="cpp-arrays">C++ Arrays</a></li>
    <li><a href="cpp-passing-array-to-function">C++ Array to Function</a></li>
    <li><a href="cpp-multidimensional-array">Multidimensional Arrays</a></li>
    </ul>
    <p><strong>C++ Pointers</strong></p>
    <ul class="points">
    <li><a href="cpp-pointers">C++ Pointers</a></li>
    </ul>
    <p><strong>C++ Object Class</strong></p>
    <ul class="points">
    <li><a href="cpp-oops-concepts">C++ OOPs Concepts</a></li>
    <li><a href="cpp-object-and-class">C++ Object Class</a></li>
    <li><a href="cpp-constructor">C++ Constructor</a></li>
    <li><a href="cpp-destructor">C++ Destructor</a></li>
    <li><a href="cpp-this-pointer">C++ this Pointer</a></li>
    <li><a href="cpp-static">C++ static</a></li>
    <li><a href="cpp-structs">C++ Structs</a></li>
    <li><a href="cpp-enumeration">C++ Enumeration</a></li>
    <li><a href="cpp-friend-function">C++ Friend Function</a></li>
    </ul>
    <p><strong>C++ Inheritance</strong></p>
    <ul class="points">
    <li><a href="cpp-inheritance">C++ Inheritance</a></li>
    <li><a href="cpp-aggregation">C++ Aggregation</a></li>
    </ul>
    <p><strong>C++ Polymorphism</strong></p>
    <ul class="points">
    <li><a href="cpp-polymorphism">C++ Polymorphism</a></li>
    <li><a href="cpp-overloading">C++ Overloading</a></li>
    <li><a href="cpp-function-overriding">C++ Overriding</a></li>
    <li><a href="cpp-virtual-function">C++ Virtual Function</a></li>
    </ul>
    <p><strong>C++ Abstraction</strong></p>
    <ul class="points">
    <li><a href="interfaces-in-cpp">C++ Interfaces</a></li>
    <li><a href="data-abstraction-in-cpp">C++ Data Abstraction</a></li>
    </ul>
    <p><strong>C++ Namespaces</strong></p>
    <ul class="points">
    <li><a href="cpp-namespaces">C++ Namespaces</a></li>
    </ul>
    <p><strong>C++ Templates</strong></p>
    <ul class="points">
    <li><a href="cpp-templates">C++ Templates</a></li>
    </ul>
    <p><strong>C++ Strings</strong></p>
    <ul class="points">
    <li><a href="cpp-strings">C++ Strings</a></li>
    </ul>
    <p><strong>C++ Exceptions</strong></p>
    <ul class="points">
    <li><a href="cpp-exception-handling">C++ Exception Handling</a></li>
    <li><a href="cpp-try-catch">C++ try/catch</a></li>
    <li><a href="cpp-user-defined-exceptions">C++ User-Defined</a></li>
    </ul>
    <p><strong>C++ File &amp; Stream</strong></p>
    <ul class="points">
    <li><a href="cpp-files-and-streams">C++ File &amp; Stream</a></li>
    </ul>
    <p><strong>C++ Programs</strong></p>
    <ul class="points">
    <li><a href="cpp-programs">C++Programs</a></li>
    <li><a href="fibonacci-series-in-cpp"><span>Fibonacci Series</span></a></li>
    <li><a href="prime-number-program-in-cpp"><span>Prime Number</span></a></li>
    <li><a href="palindrome-program-in-cpp"><span>Palindrome Number</span></a></li>
    <li><a href="factorial-program-in-cpp"><span>Factorial</span></a></li>
    <li><a href="armstrong-number-in-cpp"><span>Armstrong Number</span></a></li>
    <li><a href="sum-of-digits-program-in-cpp"><span>Sum of digits</span></a></li>
    <li><a href="cpp-program-to-reverse-number"><span>Reverse Number</span></a></li>
    <li><a href="cpp-program-to-swap-two-numbers-without-third-variable"><span>Swap Number</span></a></li>
    <li><a href="matrix-multiplication-in-cpp"><span>Matrix Multiplication</span></a></li>
    <li><a href="cpp-program-to-convert-decimal-to-binary"><span>Decimal to Binary</span></a></li>
    <li><a href="cpp-program-to-convert-number-in-characters"><span>Number in Characters</span></a></li>
    <li><a href="cpp-program-to-print-alphabet-triangle"><span>Alphabet Triangle</span></a></li>
    <li><a href="cpp-program-to-print-number-triangle"><span>Number Triangle</span></a></li>
    <li><a href="cpp-program-to-generate-fibonacci-triangle"><span>Fibonacci Triangle</span></a></li>
    </ul>
    <p><strong>C++ STL Tutorial</strong></p>
    <ul class="points">
    <li><a href="cpp-algorithm">C++ STL Algorithm</a>
    <li><a href="cpp-algorithm-adjacent_find-function">algorithm adjacent_find() function</a></li>
    <li><a href="cpp-algorithm-any_of-function">algorithm any_of() function</a></li>
    <li><a href="cpp-algorithm-copy-function">algorithm copy() function</a></li>
    <li><a href="cpp-algorithm-copy_if-function">algorithm copy_if() function</a></li>
    <li><a href="cpp-algorithm-count-function">algorithm count() function</a></li>
    <li><a href="cpp-algorithm-count_if-function">algorithm count_if() function</a></li>
    <li><a href="cpp-algorithm-equal-function">algorithm equal() function</a></li>
    <li><a href="cpp-algorithm-find-function">algorithm find() function</a></li>
    <li><a href="cpp-algorithm-find_end-function">algorithm find_end() function</a></li>
    <li><a href="cpp-algorithm-find_first_of-function">algorithm find_first_of() function</a></li>
    <li><a href="cpp-algorithm-find_if-function">algorithm find_if() function</a></li>
    <li><a href="cpp-algorithm-find_if_not-function">algorithm find_if_not() function</a></li>
    <li><a href="cpp-algorithm-for_each-function">algorithm for_each() function</a></li>
    <li><a href="cpp-algorithm-move-function">algorithm move() function</a></li>
    <li><a href="cpp-algorithm-all_of-function">algorithm all_of() function</a></li>
    <li><a href="cpp-algorithm-copy_backward-function">algorithm copy_backward() function</a></li>
    <li><a href="cpp-algorithm-copy_n-function">algorithm copy_n() function</a></li>
    <li><a href="cpp-algorithm-search-function">algorithm search() function</a></li>
    <li><a href="cpp-algorithm-is_permutation-function">algorithm is_permutation() function</a></li>
    <li><a href="cpp-algorithm-mismatch-function">algorithm mismatch() function</a></li>
    <li><a href="cpp-algorithm-move_backward-function">algorithm move_backward() function</a></li>
    <li><a href="cpp-algorithm-none_of-function">algorithm none_of() function</a></li>
    <li><a href="cpp-algorithm-search_n-function">algorithm search_n() function</a></li>
    <li><a href="cpp-algorithm-swap-function">algorithm swap() function</a></li>
    <li><a href="cpp-algorithm-fill-function">algorithm fill() function</a></li>
    <li><a href="cpp-algorithm-iter_swap-function">algorithm iter_swap() function</a></li>
    <li><a href="cpp-algorithm-replace_copy_if-function">algorithm replace_copy_if() function</a></li>
    <li><a href="cpp-algorithm-replace_copy-function">algorithm replace_copy() function</a></li>
    <li><a href="cpp-algorithm-replace_if-function">algorithm replace_if() function</a></li>
    <li><a href="cpp-algorithm-replace-function">algorithm replace() function</a></li>
    <li><a href="cpp-algorithm-swap_ranges-function">algorithm swap_ranges() function</a></li>
    <li><a href="cpp-algorithm-transform-function">algorithm transform() function</a></li>
    <li><a href="cpp-algorithm-fill_n-function">algorithm fill_n() function</a></li>
    <li><a href="cpp-algorithm-generate_n-function">algorithm generate_n() function</a></li>
    <li><a href="cpp-algorithm-generate-function">algorithm generate() function</a></li>
    <li><a href="cpp-algorithm-remove-function">algorithm remove() function</a></li>
    <li><a href="cpp-algorithm-is_partitioned-function">algorithm is_partitioned() function</a></li>
    <li><a href="cpp-algorithm-random_shuffle-function">algorithm random_shuffle() function</a></li>
    <li><a href="cpp-algorithm-remove_copy_if-function">algorithm remove_copy_if() function</a></li>
    <li><a href="cpp-algorithm-remove_copy-function">algorithm remove_copy() function</a></li>
    <li><a href="cpp-algorithm-partition_copy-function">algorithm partition_copy() function</a></li>
    <li><a href="cpp-algorithm-partition_point-function">algorithm partition_point() function</a></li>
    <li><a href="cpp-algorithm-partition-function">algorithm partition() function</a></li>
    <li><a href="cpp-algorithm-remove_if-function">algorithm remove_if() function</a></li>
    <li><a href="cpp-algorithm-reverse_copy-function">algorithm reverse_copy() function</a></li>
    <li><a href="cpp-algorithm-reverse-function">algorithm reverse() function</a></li>
    <li><a href="cpp-algorithm-rotate_copy-function">algorithm rotate_copy() function</a></li>
    <li><a href="cpp-algorithm-rotate-function">algorithm rotate() function</a></li>
    <li><a href="cpp-algorithm-shuffle-function">algorithm shuffle() function</a></li>
    <li><a href="cpp-algorithm-stable_partition-function">algorithm stable_partition() function</a></li>
    <li><a href="cpp-algorithm-unique_copy-function">algorithm unique_copy() function</a></li>
    <li><a href="cpp-algorithm-unique-function">algorithm unique() function</a></li>
    <li><a href="cpp-algorithm-is_sorted_until-function">algorithm is_sorted_until() function</a></li>
    <li><a href="cpp-algorithm-is_sorted-function">algorithm is_sorted() function</a></li>
    <li><a href="cpp-algorithm-lower_bound-function">algorithm lower_bound() function</a></li>
    <li><a href="cpp-algorithm-nth_element-function">algorithm nth_element() function</a></li>
    <li><a href="cpp-algorithm-partial_sort_copy-function">algorithm partial_sort_copy() function</a></li>
    <li><a href="cpp-algorithm-partial_sort-function">algorithm partial_sort() function</a></li>
    <li><a href="cpp-algorithm-sort-function">algorithm sort() function</a></li>
    <li><a href="cpp-algorithm-stable_sort-function">algorithm stable_sort() function</a></li>
    <li><a href="cpp-algorithm-binary_search-function">algorithm binary_search() function</a></li>
    <li><a href="cpp-algorithm-equal_range-function">algorithm equal_range() function</a></li>
    <li><a href="cpp-algorithm-includes-function">algorithm includes() function</a></li>
    <li><a href="cpp-algorithm-inplace_merge-function">algorithm inplace_merge() function</a></li>
    <li><a href="cpp-algorithm-merge-function">algorithm merge() function</a></li>
    <li><a href="cpp-algorithm-set_union-function">algorithm set_union() function</a></li>
    <li><a href="cpp-algorithm-upper_bound-function">algorithm upper_bound() function</a></li>
    </ul>
    <p><strong>C++ STL Bitset</strong></p>
    <ul class="points">
    <li><a href="post/cpp-bitset">C++ Bitset</a></li>
    <li><a href="post/cpp-bitset-all-function">bitset all() function</a></li>
    <li><a href="post/cpp-bitset-any-function">bitset any() function</a></li>
    <li><a href="post/cpp-bitset-count-function">bitset count() function</a></li>
    <li><a href="post/cpp-bitset-flip-function">bitset flip() function</a></li>
    <li><a href="post/cpp-bitset-none-function">bitset none() function</a></li>
    <li><a href="post/cpp-bitset-operator[]-function">bitset operator[]</a>
    <li><a href="post/cpp-bitset-reset-function">bitset reset() function</a></li>
    <li><a href="post/cpp-bitset-set-function">bitset set() function</a></li>
    <li><a href="post/cpp-bitset-size-function">bitset size() function</a></li>
    <li><a href="post/cpp-bitset-test-function">bitset test() function</a></li>
    <li><a href="post/cpp-bitset-to_string-function">bitset to_string() function</a></li>
    <li><a href="post/cpp-bitset-to_ullong-function">bitset to_ullong() function</a></li>
    <li><a href="post/cpp-bitset-to_ulong-function">bitset to_ulong() function</a></li>
    </ul>
    </div>
    <div class="col-3">
    <p><strong>C++ STL Deque</strong></p>
    <ul class="points">
    <li><a href="post/cpp-deque">C++ Deque</a></li>
    <li><a href="post/cpp-deque-assign-function">Deque assign() function</a></li>
    <li><a href="post/cpp-deque-emplace-function">Deque emplace() function</a></li>
    <li><a href="post/cpp-deque-emplace_back-function">Deque emplace_back() function</a></li>
    <li><a href="post/cpp-deque-emplace_front-function">Deque emplace_front() function</a></li>
    <li><a href="post/cpp-deque-insert-function">Deque insert() function</a></li>
    <li><a href="post/cpp-deque-push_back-function">Deque push_back() function</a></li>
    <li><a href="post/cpp-deque-push_front-function">Deque push_front() function</a></li>
    <li><a href="post/cpp-deque-pop_back-function">Deque pop_back() function</a></li>
    <li><a href="post/cpp-deque-pop_front-function">Deque pop_front() function</a></li>
    <li><a href="post/cpp-deque-swap-function">Deque swap() function</a></li>
    <li><a href="post/cpp-deque-clear-function">Deque clear() function</a></li>
    <li><a href="post/cpp-deque-empty-function">Deque empty() function</a></li>
    <li><a href="post/cpp-deque-erase-function">Deque erase() function</a></li>
    <li><a href="post/cpp-deque-max_size-function">Deque max_size() function</a></li>
    <li><a href="post/cpp-deque-resize-function">Deque resize() function</a></li>
    <li><a href="post/cpp-deque-shrink_to_fit-function">Deque shrink_to_fit() function</a></li>
    <li><a href="post/cpp-deque-size-function">Deque size() function</a></li>
    <li><a href="post/cpp-deque-at-function">Deque at() function</a></li>
    <li><a href="post/cpp-deque-operator[]()-function">Deque operator[]() function</a></li>
    <li><a href="post/cpp-deque-operator=()-function">Deque operator=() function</a></li>
    <li><a href="post/cpp-deque-back-function">Deque back() function</a></li>
    <li><a href="post/cpp-deque-begin-function">Deque begin() function</a></li>
    <li><a href="post/cpp-deque-cbegin-function">Deque cbegin() function</a></li>
    <li><a href="post/cpp-deque-end-function">Deque end() function</a></li>
    <li><a href="post/cpp-deque-cend-function">Deque cend() function</a></li>
    <li><a href="post/cpp-deque-rbegin-function">Deque rbegin() function</a></li>
    <li><a href="post/cpp-deque-crbegin-function">Deque crbegin() function</a></li>
    <li><a href="post/cpp-deque-rend-function">Deque rend() function</a></li>
    <li><a href="post/cpp-deque-crend-function">Deque crend() function</a></li>
    </ul>
    <p><strong>C++ STL List</strong></p>
    <ul class="points">
    <li><a href="post/cpp-list">C++ List</a></li>
    <li><a href="post/cpp-list-insert-function">List insert() function</a></li>
    <li><a href="post/cpp-list-push_back-function">List push_back() function</a></li>
    <li><a href="post/cpp-list-push_front-function">List push_front() function</a></li>
    <li><a href="post/cpp-list-pop_back-function">List pop_back() function</a></li>
    <li><a href="post/cpp-list-pop_front-function">List pop_front() function</a></li>
    <li><a href="post/cpp-list-empty-function">List empty() function</a></li>
    <li><a href="post/cpp-list-size-function">List size() function</a></li>
    <li><a href="post/cpp-list-max_size-function">List max_size() function</a></li>
    <li><a href="post/cpp-list-front-function">List front() function</a></li>
    <li><a href="post/cpp-list-back-function">List back() function</a></li>
    <li><a href="post/cpp-list-swap-function">List swap() function</a></li>
    <li><a href="post/cpp-list-reverse-function">List reverse() function</a></li>
    <li><a href="post/cpp-list-sort-function">List sort() function</a></li>
    <li><a href="post/cpp-list-merge-function">List merge() function</a></li>
    <li><a href="post/cpp-list-splice-function">List splice() function</a></li>
    <li><a href="post/cpp-list-unique-function">List unique() function</a></li>
    <li><a href="post/cpp-list-resize-function">List resize() function</a></li>
    <li><a href="post/cpp-list-assign-function">List assign() function</a></li>
    <li><a href="post/cpp-list-emplace-function">List emplace() function</a></li>
    <li><a href="post/cpp-list-emplace_back-function">List emplace_back() function</a></li>
    <li><a href="post/cpp-list-emplace_front-function">List emplace_front() function</a></li>
    </ul>
    <p><strong>C++ STL Map</strong></p>
    <ul class="points">
    <li><a href="post/cpp-map">C++ Map</a></li>
    <li><a href="post/cpp-map-at-function">map at() function</a></li>
    <li><a href="post/cpp-map-begin-function">map begin() function</a></li>
    <li><a href="post/cpp-map-cbegin-function">map cbegin() function</a></li>
    <li><a href="post/cpp-map-cend-function">map cend() function</a></li>
    <li><a href="post/cpp-map-crbegin-function">map crbegin() function</a></li>
    <li><a href="post/cpp-map-crend-function">map crend() function</a></li>
    <li><a href="post/cpp-map-empty-function">map empty() function</a></li>
    <li><a href="post/cpp-map-end-function">map end() function</a></li>
    <li><a href="post/cpp-map-max_size-function">map max_size() function</a></li>
    <li><a href="post/cpp-map-operator[]-function">map operator[]</a>
    <li><a href="post/cpp-map-rbegin-function">map rbegin() function</a></li>
    <li><a href="post/cpp-map-rend-function">map rend() function</a></li>
    <li><a href="post/cpp-map-size-function">map size() function</a></li>
    <li><a href="post/cpp-map-clear-function">map clear() function</a></li>
    <li><a href="post/cpp-map-emplace-function">map emplace() function</a></li>
    <li><a href="post/cpp-map-emplace_hint-function">map emplace_hint() function</a></li>
    <li><a href="post/cpp-map-erase-function">map erase() function</a></li>
    <li><a href="post/cpp-map-find-function">map find() function</a></li>
    <li><a href="post/cpp-map-insert-function">map insert() function</a></li>
    <li><a href="post/cpp-map-operator=()-function">map operator=()</a></li>
    <li><a href="post/cpp-map-swap-function">map swap() function</a></li>
    </ul>
    <p><strong>C++ STL Math</strong></p>
    <ul class="points">
    <li><a href="cpp-math-cos-function">math cos() function</a></li>
    <li><a href="cpp-math-sin-function">math sin() function</a></li>
    <li><a href="cpp-math-tan-function">math tan() function</a></li>
    <li><a href="cpp-math-acos-function">math acos() function</a></li>
    <li><a href="cpp-math-asin-function">math asin() function</a></li>
    <li><a href="cpp-math-atan-function">math atan() function</a></li>
    <li><a href="cpp-math-atan2-function">math atan2() function</a></li>
    <li><a href="cpp-math-cosh-function">math cosh() function</a></li>
    <li><a href="cpp-math-sinh-function">math sinh() function</a></li>
    <li><a href="cpp-math-tanh-function">math tanh() function</a></li>
    <li><a href="cpp-math-acosh-function">math acosh() function</a></li>
    <li><a href="cpp-math-asinh-function">math asinh() function</a></li>
    <li><a href="cpp-math-atanh-function">math atanh() function</a></li>
    <li><a href="cpp-math-exp-function">math exp() function</a></li>
    <li><a href="cpp-math-frexp-function">math frexp() function</a></li>
    <li><a href="cpp-math-idexp-function">math Idexp() function</a></li>
    <li><a href="cpp-math-log-function">math log() function</a></li>
    <li><a href="cpp-math-log10-function">math log10() function</a></li>
    <li><a href="cpp-math-modf-function">math modf() function</a></li>
    <li><a href="cpp-math-exp2-function">math exp2() function</a></li>
    <li><a href="cpp-math-expm1-function">math expm1() function</a></li>
    <li><a href="cpp-math-log1p-function">math log1p() function</a></li>
    <li><a href="cpp-math-log2-function">math log2() function</a></li>
    <li><a href="cpp-math-logb-function">math logb() function</a></li>
    <li><a href="cpp-math-scalbn-function">math scalbn() function</a></li>
    <li><a href="cpp-math-scalbln-function">math scalbln() function</a></li>
    <li><a href="cpp-math-ilogb-function">math ilogb() function</a></li>
    <li><a href="cpp-math-copysign-function">math copysign() function</a></li>
    <li><a href="cpp-math-nextafter-function">math nextafter() function</a></li>
    <li><a href="cpp-math-nexttoward-function">math nexttoward() function</a></li>
    <li><a href="cpp-math-fdim-function">math fdim() function</a></li>
    <li><a href="cpp-math-fmax-function">math fmax() function</a></li>
    <li><a href="cpp-math-fmin-function">math fmin() function</a></li>
    <li><a href="cpp-math-pow-function">math pow() function</a></li>
    <li><a href="cpp-math-sqrt-function">math sqrt() function</a></li>
    <li><a href="cpp-math-cbrt-function">math cbrt() function</a></li>
    <li><a href="cpp-math-hypot-function">math hypot() function</a></li>
    <li><a href="cpp-math-ceil-function">math ceil() function</a></li>
    <li><a href="cpp-math-floor-function">math floor() function</a></li>
    <li><a href="cpp-math-round-function">math round() function</a></li>
    <li><a href="cpp-math-lround-function">math lround() function</a></li>
    <li><a href="cpp-math-llround-function">math llround() function</a></li>
    <li><a href="cpp-math-fmod-function">math fmod() function</a></li>
    <li><a href="cpp-math-trunc-function">math trunc() function</a></li>
    <li><a href="cpp-math-rint-function">math rint() function</a></li>
    <li><a href="cpp-math-lrint-function">math lrint() function</a></li>
    <li><a href="cpp-math-llrint-function">math llrint() function</a></li>
    <li><a href="cpp-math-nearbyint-function">math nearbyint() function</a></li>
    <li><a href="cpp-math-remainder-function">math remainder() function</a></li>
    <li><a href="cpp-math-remquo-function">math remquo() function</a></li>
    <li><a href="cpp-math-fabs-function">math fabs() function</a></li>
    <li><a href="cpp-math-abs-function">math abs() function</a></li>
    <li><a href="cpp-math-fma-function">math fma() function</a></li>
    <li><a href="cpp-math-fpclassify-function">math fpclassify() function</a></li>
    <li><a href="cpp-math-isfinite-function">math isfinite() function</a></li>
    <li><a href="cpp-math-isinf-function">math isinf() function</a></li>
    <li><a href="cpp-math-isnan-function">math isnan() function</a></li>
    <li><a href="cpp-math-isnormal-function">math isnormal() function</a></li>
    <li><a href="cpp-math-signbit-function">math signbit() function</a></li>
    <li><a href="cpp-math-isgreater-function">math isgreater() function</a></li>
    <li><a href="cpp-math-isgreaterequal-function">math isgreaterequal() function</a></li>
    <li><a href="cpp-math-less-function">math less() function</a></li>
    <li><a href="cpp-math-islessequal-function">math islessequal() function</a></li>
    <li><a href="cpp-math-islessgreater-function">math islessgreater() function</a></li>
    <li><a href="cpp-math-isunordered-function">math isunordered() function</a></li>
    <li><a href="cpp-math-erf-function">math erf() function</a></li>
    <li><a href="cpp-math-erfc-function">math erfc() function</a></li>
    <li><a href="cpp-math-tgamma-function">math tgamma() function</a></li>
    <li><a href="cpp-math-lgamma-function">math lgamma() function</a></li>
    </ul>
    <p><strong>C++ STL priority_queue</strong></p>
    <ul class="points">
    <li><a href="post/cpp-priority_queue">C++ priority_queue</a>
    <li><a href="post/cpp-priority_queue-emplace-function">priority_queue emplace() function</a></li>
    <li><a href="post/cpp-priority_queue-empty-function">priority_queue empty() function</a></li>
    <li><a href="post/cpp-priority_queue-pop-function">priority_queue pop() function</a></li>
    <li><a href="post/cpp-prioriy_queue-push-function">priority_queue push() function</a></li>
    <li><a href="post/cpp-priority_queue-size-function">priority_queue size() function</a></li>
    <li><a href="post/cpp-priority_queue-swap-function">priority_queue swap() function</a></li>
    <li><a href="post/cpp-priority_queue-top-function">priority_queue top() function</a></li>
    </ul>
    <p><strong>C++ STL Stack</strong></p>
    <ul class="points">
    <li><a href="cpp-stack">C++ Stack</a></li>
    <li><a href="cpp-stack-emplace-function">stack emplace() function</a></li>
    <li><a href="cpp-stack-empty-function">stack empty() function</a></li>
    <li><a href="cpp-stack-pop-function">stack pop() function</a></li>
    <li><a href="cpp-stack-push-function">stack push() function</a></li>
    <li><a href="cpp-stack-size-function">stack size() function</a></li>
    <li><a href="cpp-stack-top-function">stack top() function</a></li>
    </ul>
    <p><strong>C++ STL Queue</strong></p>
    <ul class="points">
    <li><a href="cpp-queue">C++ Queue</a></li>
    <li><a href="cpp-queue-back-function">queue back() function</a></li>
    <li><a href="cpp-queue-emplace-function">queue emplace() function</a></li>
    <li><a href="cpp-queue-empty-function">queue empty() function</a></li>
    <li><a href="cpp-queue-front-function">queue front() function</a></li>
    <li><a href="cpp-queue-pop-function">queue pop() function</a></li>
    <li><a href="cpp-queue-push-function">queue push() function</a></li>
    <li><a href="cpp-queue-size-function">queue size() function</a></li>
    </ul>
    </div>
    <div class="col-3">
    <p><strong>C++ STL Multiset</strong></p>
    <ul class="points">
    <li><a href="cpp-multiset">C++ multiset</a>
    <li><a href="cpp-multiset-constructor">multiset constructor</a>
    <li><a href="cpp-multiset-destructor">multiset destructor</a>
    <li><a href="cpp-multiset-begin-function">multiset begin() function</a></li>
    <li><a href="cpp-multiset-end-function">multiset end() function</a></li>
    <li><a href="cpp-multiset-operator=-function">multiset operator=</a>
    <li><a href="cpp-multiset-rbegin-function">multiset rbegin() function</a></li>
    <li><a href="cpp-multiset-rend-function">multiset rend() function</a></li>
    <li><a href="cpp-multiset-cbegin-function">multiset cbegin() function</a></li>
    <li><a href="cpp-multiset-cend-function">multiset cend() function</a></li>
    <li><a href="cpp-multiset-max_size-function">multiset max_size() function</a></li>
    <li><a href="cpp-multiset-size-function">multiset size() function</a></li>
    <li><a href="cpp-multiset-crbegin-function">multiset crbegin() function</a></li>
    <li><a href="cpp-multiset-crend-function">multiset crend() function</a></li>
    <li><a href="cpp-multiset-empty-function">multiset empty() function</a></li>
    <li><a href="cpp-multiset-insert-function">multiset insert() function</a></li>
    <li><a href="cpp-multiset-clear-function">multiset clear() function</a></li>
    <li><a href="cpp-multiset-emplace-function">multiset emplace() function</a></li>
    <li><a href="cpp-multiset-erase-function">multiset erase() function</a></li>
    <li><a href="cpp-multiset-swap-function">multiset swap() function</a></li>
    <li><a href="cpp-multiset-emplace_hint-function">multiset emplace_hint() function</a></li>
    <li><a href="cpp-multiset-find-function">multiset find() function</a></li>
    <li><a href="cpp-multiset-key_comp-function">multiset key_comp() function</a></li>
    <li><a href="cpp-multiset-value_comp-function">multiset value_comp() function</a></li>
    <li><a href="cpp-multiset-count-function">multiset count() function</a></li>
    <li><a href="cpp-multiset-equal_range-function">multiset equal_range() function</a></li>
    <li><a href="cpp-multiset-lower_bound-function">multiset lower_bound() function</a></li>
    <li><a href="cpp-multiset-upper_bound-function">multiset upper_bound() function</a></li>
    <li><a href="cpp-multiset-get_allocator-function">multiset get_allocator() function</a></li>
    <li><a href="cpp-multiset-non-member-operator==">multiset operator==</a>
    <li><a href="cpp-multiset-non-member-operator!=">multiset operator!=</a>
    <li><a href="cpp-multiset-non-member-operator-less-than">multiset operator&lt;</a>
    <li><a href="cpp-multiset-non-member-operator-less-than=">multiset operator&lt;=</a>
    <li><a href="cpp-multiset-non-member-operator-greater-than">multiset operator&gt;</a>
    <li><a href="cpp-multiset-non-member-operator-greater-than=">multiset operator&gt;=</a>
    <li><a href="cpp-multiset-non-member-swap-function">multiset swap() function</a></li>
    </ul>
    <p><strong>C++ STL Multimap</strong></p>
    <ul class="points">
    <li><a href="post/cpp-multimap">C++ Multimap</a></li>
    <li><a href="post/cpp-multimap-crbegin-function">multimap crbegin() function</a></li>
    <li><a href="post/cpp-multimap-crend-function">multimap crend() function</a></li>
    <li><a href="post/cpp-multimap-begin-function">multimap begin() function</a></li>
    <li><a href="post/cpp-multimap-cbegin-function">multimap cbegin() function</a></li>
    <li><a href="post/cpp-multimap-cend-function">multimap cend() function</a></li>
    <li><a href="post/cpp-multimap-end-function">multimap end() function</a></li>
    <li><a href="post/cpp-multimap-rbegin-function">multimap rbegin() function</a></li>
    <li><a href="post/cpp-multimap-rend-function">multimap rend() function</a></li>
    <li><a href="post/cpp-multimap-clear-function">multimap clear() function</a></li>
    <li><a href="post/cpp-multimap-emplace-function">multimap emplace() function</a></li>
    <li><a href="post/cpp-multimap-empty-function">multimap empty() function</a></li>
    <li><a href="post/cpp-multimap-erase-function">multimap erase() function</a></li>
    <li><a href="post/cpp-multimap-insert-function">multimap insert() function</a></li>
    <li><a href="post/cpp-multimap-swap-function">multimap swap() function</a></li>
    <li><a href="post/cpp-multimap-equal_range-function">multimap equal_range() function</a></li>
    <li><a href="post/cpp-multimap-non-member-operator==-function">multimap operator==</a>
    <li><a href="post/cpp-multimap-non-member-operator!=-function">multimap operator!=</a>
    <li><a href="post/cpp-multimap-non-member-operator<-function">multimap operator&lt;</a>
    <li><a href="post/cpp-multimap-non-member-operator<=-function">multimap operator&lt;=</a>
    <li><a href="post/cpp-multimap-non-member-operator>-function">multimap operator></a>
    <li><a href="post/cpp-multimap-non-member-operator>=-function">multimap operator>=</a>
    <li><a href="post/cpp-multimap-non-member-swap-function">multimap swap() function</a></li>
    </ul>
    <p><strong>C++ STL Set</strong></p>
    <ul class="points">
    <li><a href="cpp-set">C++ Set</a></li>
    <li><a href="cpp-set-constructor">set constructor</a>
    <li><a href="cpp-set-destructor">set destructor</a>
    <li><a href="cpp-set-operator=()-function">set operator=() function</a></li>
    <li><a href="cpp-set-begin-function">set begin() function</a></li>
    <li><a href="cpp-set-cbegin-function">set cbegin() function</a></li>
    <li><a href="cpp-set-end-function">set end() function</a></li>
    <li><a href="cpp-set-cend-function">set cend() function</a></li>
    <li><a href="cpp-set-rbegin-function">set rbegin() function</a></li>
    <li><a href="cpp-set-rend-function">set rend() function</a></li>
    <li><a href="cpp-set-crbegin-function">set crbegin() function</a></li>
    <li><a href="cpp-set-crend-function">set crend() function</a></li>
    <li><a href="cpp-set-empty-function">set empty() function</a></li>
    <li><a href="cpp-set-size-function">set Size() function</a></li>
    <li><a href="cpp-set-max_size-function">set max_size() function</a></li>
    <li><a href="cpp-set-insert-function">set insert() function</a></li>
    <li><a href="cpp-set-erase-function">set erase() function</a></li>
    <li><a href="cpp-set-swap-function">set Swap() function</a></li>
    <li><a href="cpp-set-clear-function">set clear() function</a></li>
    <li><a href="cpp-set-emplace-function">set emplace() function</a></li>
    <li><a href="cpp-set-emplace_hint-function">set emplace_hint() function</a></li>
    <li><a href="cpp-set-key_comp-function">set key_comp() function</a></li>
    <li><a href="cpp-set-value_comp-function">set value_comp() function</a></li>
    <li><a href="cpp-set-find-function">set find() function</a></li>
    <li><a href="cpp-set-count-function">set count() function</a></li>
    <li><a href="cpp-set-lower_bound-function">set lower_bound() function</a></li>
    <li><a href="cpp-set-upper_bound-function">set upper_bound() function</a></li>
    <li><a href="cpp-set-equal_range-function">set equal_range() function</a></li>
    <li><a href="cpp-set-get_allocator-function">set get_allocator() function</a></li>
    <li><a href="cpp-set-non-member-operator==">set operator==</a>
    <li><a href="cpp-set-non-member-operator!=">set operator!=</a>
    <li><a href="cpp-set-non-member-operator-less-than">set operator&lt;</a>
    <li><a href="cpp-set-non-member-operator-less-than=">set operator&lt;=</a>
    <li><a href="cpp-set-non-member-operator-greater-than">set operator&gt;</a>
    <li><a href="cpp-set-non-member-operator-greater-than=">set operator&gt;=</a>
    <li><a href="cpp-set-non-member-swap-function">set swap() function</a></li>
    </ul>
    <p><strong>C++ STD Strings</strong></p>
    <ul class="points">
    <li><a href="cpp-string-compare-function">string compare() function</a></li>
    <li><a href="cpp-string-length-function">string length() function</a></li>
    <li><a href="cpp-string-swap-function">string swap() function</a></li>
    <li>string substr() function</li>
    <li><a href="cpp-string-size-function">string size() function</a></li>
    <li><a href="cpp-string-resize-function">string resize() function</a></li>
    <li><a href="cpp-string-replace-function">string replace() function</a></li>
    <li><a href="cpp-string-append-function">string append() function</a></li>
    <li><a href="cpp-string-at-function">string at() function</a></li>
    <li><a href="cpp-string-find-function">string find() function</a></li>
    <li><a href="cpp-string-find-first-of-function">string find_first_of() function</a></li>
    <li><a href="cpp-string-find-first-not-of-function">string find_first_not_of() function</a></li>
    <li><a href="cpp-string-find-last-of-function">string find_last_of() function</a></li>
    <li><a href="cpp-string-find-last-not-of-function">string find_last_not_of() function</a></li>
    <li><a href="cpp-string-insert-function">string insert() function</a></li>
    <li><a href="cpp-string-max-size-function">string max_size() function</a></li>
    <li><a href="cpp-string-push-back-function">string push_back() function</a></li>
    <li><a href="cpp-string-pop-back-function">string pop_back() function</a></li>
    <li><a href="cpp-string-assign-function">sstring assign() function</a></li>
    <li><a href="cpp-string-copy-function">string copy() function</a></li>
    <li><a href="cpp-string-back-function">string back() function</a></li>
    <li><a href="cpp-string-begin-function">string begin() function</a></li>
    <li><a href="cpp-string-capacity-function">string capacity() function</a></li>
    <li><a href="cpp-string-cbegin-function">string cbegin() function</a></li>
    <li><a href="cpp-string-cend-function">string cend() function</a></li>
    <li><a href="cpp-string-clear-function">string clear() function</a></li>
    <li><a href="cpp-string-crbegin-function">string crbegin() function</a></li>
    <li><a href="cpp-string-data-function">string data() function</a></li>
    <li><a href="cpp-string-empty-function">string empty() function</a></li>
    <li><a href="cpp-string-erase-function">string erase() function</a></li>
    <li><a href="cpp-string-front-function">string front() function</a></li>
    <li><a href="cpp-string-operator+=()-function">string operator+=()</a></li>
    <li><a href="cpp-string-operator=()-function">string operator=()</a></li>
    <li><a href="cpp-string-operator[]()-function">string operator[]()</a></li>
    <li><a href="cpp-string-rfind-function">string rfind() function</a></li>
    <li><a href="cpp-string-end-function">string end() function</a></li>
    <li><a href="cpp-string-rend-function">string rend() function</a></li>
    <li><a href="cpp-string-shrink-to-fit-function">string shrink_to_fit() function</a></li>
    <li><a href="cpp-string-c-str-function">string c_str() function</a></li>
    <li><a href="cpp-string-crend-function">string crend() function</a></li>
    <li><a href="cpp-string-rbegin-function">string rbegin() function</a></li>
    <li><a href="cpp-string-reserve-function">string reserve() function</a></li>
    <li>string get_allocator() function</li>
    </ul>
    <p><strong>C++ STL Vector</strong></p>
    <ul class="points">
    <li><a href="cpp-vector">C++ Vector</a></li>
    <li><a href="cpp-vector-at-function">Vector at() function</a></li>
    <li><a href="cpp-vector-back-function">Vector back() function</a></li>
    <li><a href="cpp-vector-front-function">Vector front() function</a></li>
    <li><a href="cpp-vector-swap-function">Vector swap() function</a></li>
    <li><a href="cpp-vector-push-back-function">Vector push_back() function</a></li>
    <li><a href="cpp-vector-pop-back-function">Vector pop_back() function</a></li>
    <li><a href="cpp-vector-empty-function">Vector empty() function</a></li>
    <li><a href="cpp-vector-insert-function">Vector insert() function</a></li>
    <li><a href="cpp-vector-erase-function">Vector erase() function</a></li>
    <li><a href="cpp-vector-resize-function">Vector resize() function</a></li>
    <li><a href="cpp-vector-clear-function">Vector clear() function</a></li>
    <li><a href="cpp-vector-size-function">Vector size() function</a></li>
    <li><a href="cpp-vector-capacity-function">Vector capacity() function</a></li>
    <li><a href="cpp-vector-assign-function">Vector assign() function</a></li>
    <li><a href="cpp-vector-operator=()-function">Vector operator=() function</a></li>
    <li><a href="cpp-vector-operator[]()-function">Vector operator[]() function</a></li>
    <li><a href="cpp-vector-end-function">Vector end() function</a></li>
    <li><a href="cpp-vector-emplace-function">Vector emplace() function</a></li>
    <li><a href="cpp-vector-emplace-back-function">Vector emplace_back() function</a></li>
    <li><a href="cpp-vector-rend-function">Vector rend() function</a></li>
    <li><a href="cpp-vector-rbegin-function">Vector rbegin() function</a></li>
    <li><a href="cpp-vector-begin-function">Vector begin() function</a></li>
    <li><a href="cpp-vector-max-size-function">Vector max_size() function</a></li>
    <li><a href="cpp-vector-cend-function">Vector cend() function</a></li>
    <li><a href="cpp-vector-cbegin-function">Vector cbegin() function</a></li>
    <li><a href="cpp-vector-crbegin-function">Vector crbegin() function</a></li>
    <li><a href="cpp-vector-crend-function">Vector crend() function</a></li>
    <li><a href="cpp-vector-data-function">Vector data() function</a></li>
    <li><a href="cpp-vector-shrink-to-fit-function">Vector shrink_to_fit() function</a></li>
    </ul>
    <p><strong>Interview Questions</strong></p>
    <ul class="points">
    <li><a href="cpp-interview-questions">Interview Questions</a></li>
    </ul>
    </div>
    </div>
    


</div>
<%- include("Footer")-%>